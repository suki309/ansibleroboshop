- name: Install catalogue component
  hosts: catalogue
  become: yes
  tasks: 
  - name: setup NPM source
    ansible.builtin.shell: "https://rpm.nodesource.com/setup_lts.x | bash"

  - name: Install nodejs
    ansible.builtin.yum: 
     name: nodejs
     state: installed
     disable_gpg_check: true

  - name: check roboshop user exist or not
    ansible.builtin.command: id roboshop
    register: out
    ignore_errors: true
  - when: out.rc != 0
    name: create user roboshop
    become: yes
    ansible.builtin.user: 
     name: roboshop

  - name: check /app directory exist or not
    ansible.builtin.stat:
     path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug: 
     msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
     path: /app
     state: directory

  - name: download catalogue artifact
    ansible.builtin.get_url:
     url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
     dest: /tmp

  - name: extract catalogue artifact
    ansible.builtin.unarchive:
     src: /tmp/catalogue.zip
     dest: /app
     remote_src: yes

  - name: Install dependencies
    ansible.builtin.command: npm install
    args: 
     chdir: /app

  - name: copy catalogue service
    ansible.builtin.copy:
     src: catalogue1.service
     dest: /etc/systemd/system/catalogue.service
  - name: daemon reload
    ansible.builtin.systemd:
     daemon_reload: true

  - name: copy mongo repo to yum.repos.d
    ansible.builtin.copy:
     src: mongodb.repo
     dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb
    ansible.builtin.yum:
     name: mongodb-org-shell   
     state: installed

  - name: load catalogue data
    ansible.builtin.command: mongo --host 172.31.37.39 < /app /schema /catalogue.js   

  - name: restart catalogue
    ansible.builtin.service: 
     name: catalogue
     state: restarted
     enabled: yes           

